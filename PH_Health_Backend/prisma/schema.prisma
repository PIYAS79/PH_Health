generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String      @id @default(uuid())
  email                String      @unique
  password             String
  role                 User_Role
  need_password_change Boolean     @default(true)
  user_status          User_Status @default(ACTIVE)
  createdAt            DateTime    @default(now())
  updatedAt            DateTime    @updatedAt
  admin                Admin?
  doctor               Doctor?
  patient              Patient?

  @@map("users")
}

model Patient {
  id             String   @id @unique @default(uuid())
  email          String   @unique
  name           String
  profile_photo  String?
  contact_number String?
  address        String?
  isDeleted      Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  user User @relation(references: [email], fields: [email])

  @@map("patients")
}

model Doctor {
  id                    String   @id @default(uuid())
  name                  String
  email                 String   @unique
  profile_photo         String?
  contact_number        String
  address               String
  reg_number            String
  experience            Int      @default(0)
  gender                Gender
  appointment_fee       Int
  qualification         String
  current_working_place String
  designation           String
  is_deleted            Boolean  @default(false)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  user              User                @relation(fields: [email], references: [email])
  doctorSpecialties DoctorSpecialties[]

  @@map("doctors")
}

model Specialties {
  id                String              @id @default(uuid())
  title             String
  icon              String
  doctorSpecialties DoctorSpecialties[]

  @@map("specialties")
}

model DoctorSpecialties {
  specialtiesId String
  specialties   Specialties @relation(fields: [specialtiesId], references: [id])
  doctorId      String
  doctor        Doctor      @relation(fields: [doctorId], references: [id])

  @@id([specialtiesId, doctorId])
  @@map("doctor_specialties")
}

model Admin {
  id             String   @id @default(uuid())
  name           String
  email          String   @unique
  profile_photo  String?
  contact_number String
  is_deleted     Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  user User @relation(fields: [email], references: [email])

  @@map("admins")
}

enum User_Role {
  SUPER_ADMIN
  ADMIN
  DOCTOR
  PATIENT
}

enum User_Status {
  ACTIVE
  BLOCKED
  DELETED
}

enum Gender {
  MALE
  FEMALE
}
